/**
 * @ Author: Muniz
 * @ Create Time: 2020-06-09 19:27:48
 * @ Modified by: Muniz
 * @ Modified time: 2020-06-28 18:11:02
 * @ Description: 多语言切换组件
 */

import React, { useState, useEffect } from 'react';
import { Input, Radio, Alert, Select } from 'antd';
import { useImmer } from 'use-immer';

import FindoraBoxView from '_components/FindoraBoxView';
import services from '_src/services';

import './index.less';

const AssetName = ({ isCreate, onResult, address }) => {
  // const walletStore = React.useContext(MobXProviderContext).walletStore;
  // const dataList = walletStore.walletImportList;
  const [isSelect, setSelect] = useState('default');

  const dataList = [
    { short: 'FIN', long: '3322123123' },
    { short: 'GIN', long: '2322312313' },
  ];

  const [assetNameLong, setAssetNameLong] = useState(dataList[0].long);

  const [assetNameData, setAssetNameData] = useImmer({
    short: '',
    long: '',
  });

  const [assetNameDataCust, setAssetNameDataCust] = useImmer({
    short: '',
    long: '',
  });

  useEffect(() => {
    /** 初始化资产名称 */
    services.assetServer.getAssetNameLong().then((value) => {
      setAssetNameData((state) => {
        state.long = value;
      });
    });
    /** 从服务端获取 已创建的资产 */
    services.assetServer.getAssetNameServer({ address }).then((value) => {
      console.log(value);
    });
  }, []);

  /** 监听默认属性变化, 自动触发保存onResult事件 */
  useEffect(() => {
    onResult(assetNameData);
  }, [assetNameData]);

  /** 监听自定义属性变化, 自动触发保存onResult事件 */
  useEffect(() => {
    onResult(assetNameDataCust);
  }, [assetNameDataCust]);

  /** 监听面板属性变化, 自动触发保存onResult事件 */
  useEffect(() => {
    if (isSelect === 'default') {
      onResult(assetNameData);
    } else {
      onResult(assetNameDataCust);
    }
  }, [isSelect]);

  /** 切换Asset Name 创建名称方式 */
  function handleSelectAssetTab(e) {
    setSelect(e.target.value);
  }

  /** 默认资产短名字, 修改事件 */
  function handleChangeShortName(e) {
    e.persist();
    setAssetNameData((state) => {
      state.short = e.target.value;
    });
  }

  /** 自定义资产短名字, 修改事件 */
  function handleChangeShortNameCust(e) {
    e.persist();
    setAssetNameDataCust((state) => {
      state.short = e.target.value;
    });
  }

  /** 自定义, 根据shortName 生成 longName */
  function handleGenerateLongName(e) {
    e.persist();
    setAssetNameDataCust((state) => {
      state.long = state.short;
    });
  }

  function defaultAssetName() {
    return (
      <div className="asset-name-box">
        <Alert
          message="NOTICE"
          description="The long name is generated by the system, and the user defines the short name. The short name can be defined repeatedly."
          type="info"
          showIcon
          style={{ marginBottom: '25px', background: '#EEE2FF' }}
        />

        <FindoraBoxView title="LongName" isRow>
          {assetNameData.long}
        </FindoraBoxView>
        <FindoraBoxView title="ShortName" isRow>
          <Input placeholder="Please to shortName" value={assetNameData.short} onChange={handleChangeShortName} />
        </FindoraBoxView>
      </div>
    );
  }

  function customizeAssetName() {
    return (
      <div className="asset-name-box">
        <Alert
          message="NOTICE"
          description="The user can customize the short name, the long name is generated by the short name, and the short name must be unique."
          type="info"
          showIcon
          style={{ marginBottom: '25px', background: '#EEE2FF' }}
        />
        <FindoraBoxView title="ShortName" isRow>
          <div className="generate-name">
            <Input
              placeholder="Please to shortName"
              value={assetNameDataCust.short}
              onChange={handleChangeShortNameCust}
            />
            <div className="generate-name-btn" onClick={handleGenerateLongName}>
              Generate Long Name
            </div>
          </div>
        </FindoraBoxView>
        <FindoraBoxView title="LongName" isRow>
          {assetNameDataCust.long}
        </FindoraBoxView>
      </div>
    );
  }

  function createAssetName() {
    return (
      <div className="findora-asset-name">
        <Radio.Group value={isSelect} buttonStyle="solid" onChange={handleSelectAssetTab}>
          <Radio value="default">Default</Radio>
          <Radio value="customize" disabled>
            Customize
          </Radio>
        </Radio.Group>
        {isSelect === 'default' ? defaultAssetName() : customizeAssetName()}
      </div>
    );
  }
  /** 显示资产页面,切换资产事件 */
  function handleSelectAssetName(value) {
    setAssetNameLong(value);
  }
  function showAssetName() {
    return (
      <div className="findora-asset-name">
        <Select
          className="findora-switch-address"
          defaultValue={assetNameLong}
          style={{ width: '100%' }}
          onChange={handleSelectAssetName}
        >
          {dataList.map((item) => {
            return (
              <Select.Option value={item.long} key={item.long}>
                {item.short}
              </Select.Option>
            );
          })}
        </Select>
        <div>{assetNameLong}</div>
      </div>
    );
  }
  return isCreate ? createAssetName() : showAssetName();
};

export default AssetName;
